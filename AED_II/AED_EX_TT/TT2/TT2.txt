TRABALHO TEORICO 2

Conceitos Básicos

    a)Falso
    b)Verdadeiro
    c)Falso
    d)Verdadeiro
    e)Verdadeiro
    f)Falso
    g)Falso

Noções de complexidade

    Exercicio Resolvido 01:
        a) 1
        b) 2
        c) 4
        d) 8
        e) 16
        f) 32
        g) 64
        h) 128
        i) 256
        j) 512
        k) 1024
        l) 2048

    Exercicio Resolvido 02:
        A) 11
        B) 10
        C) 9
        D) 8
        E) 7
        F) 6
        G) 5
        H) 4
        I) 3
        J) 2
        K) 1
        L) 0

    Exercicio Resolvido 03:
        A) 5
        B) 4
        C) 5
        D) 4
        E) 4
        F) 4
        G) 4,087
        H) 5
        I) 4
        J) 3,907
        K) 4
        L) 3

    Exercicio Resolvido 06:
        Resposta: 3 subtrações.
    
    Exercicio Resolvido 07:
        Resposta: Pior caso (a - 5 < b - 3) = 5 subtrações. Melhor caso (else) = 3 subtrações.
    
    Exercicio Resolvido 08: 
        Resposta: Pior caso = 7 subtrações; Melhor caso = 5 subtrações
    
    Exercicio Resolvido 09:
        Resposta: 4 subtrações.
    
    Exercicio Resolvido 10: 
        Resposta: 2n subtrações.
    
    Exercicio Resolvido 11:
        Resposta: (n-3) subtrações.
    
    Exercicio Resolvido 12:
        Resposta: 3 subtrações.
    
    Exercicio Resolvido 13: 
        Resposta: 3 subtrações.
    
    Exercicio Resolvido 14:
        Resposta: 6 subtrações.

    Exercicio Resolvido 15:
        Resposta: Lg(n) + 1.
    
    Exercicio Resolvido 16:
        a)      
                    ...
                int i = 0;
                while(i < n) {
                    i++;
                    a--;b--;c--;
                }
                for(i = 0; i < n; i++) {
                    for(int j = 0; j < n; j++) {
                        a--;b--;
                    }
                }
        
        b) 
                    ...
                int i = 0;
                while(i < n) {
                    i++;
                    a--;b--;c--;d--;e--;
                }
                for(i = 0; i < n; i++) {
                    for(int j = 0; j < n; j++) {
                        for(int k = 0; k < n; k++) {
                            a--;b--;c--;d--;
                        }
                    }
                }
        
        c)
                    ...
                for(int i = n; i > 1; i/=2) {
                    a--;
                }
                int i = 0;
                while(i < n) {
                    i++;
                    a--;
                }

        d)
                    ...
                for(i = 0; i < n; i++) {
                    for(int j = 0; j < n; j++) {
                        for(int k = 0; k < n; k++) {
                            a--;b--;
                        }
                    }
                }

                int i = 0;
                while(i < 5) {
                    i++;
                    a--;
                }
        
        e)
                    ...
                for(i = 0; i < n; i++) {
                    for(int j = 0; j < n; j++) {
                        for(int k = 0; k < n; k++) {
                            for(int l = 0; l < n; l++) {
                                a--;b--;
                            }
                        }
                    }
                }
                for(i = 0; i < n; i++) {
                    for(int j = 0; j < n; j++) {
                        a--;b--;
                    }
                }
                int i = 0;
                while(i < n/2) {
                    i++;
                    a--;
                }
        
        f)
                    ...
                for(int i = n; i > 0; i/=2) {
                    a--;
                }
                for(int i = n; i > 0; i/=2) {
                    a--;b--;c--;d--;e--;
                }
        
    Exercicio Resolvido 17:
        1) Resposta: Comparação de elementos do array.
        2) Resposta: n - 1;
        3) Resposta: Todos os casos.
        4) Resposta: Sim, pois como é um algoritmo para encontrar o menor inteiro no array, é necessário comparar todos os elementos contidos no array.
    
    Exercicio Resolvido 18:
        Resposta: Melhor caso: f(n) = 1; Pior caso: f(n) = n;
    
    Exercicio Resolvido 19:
        Resposta: Melhor caso: f(n) = 1; Pior caso: f(n) = log(n);
    
    Exercicio Resolvido 20:
        Resposta: 3 movimentações de registros na função swap. Logo, dentro do laço for a função = 3*(n - 1) = 3n -3.
    
    Exercicio Resolvido 21:
        Resposta: 
                    int movimentacao = 0;
                    for (int i = 0; i < (n - 1); i++) {
                        int menor = i;
                        for (int j = (i + 1); j < n; j++){
                            if (array[menor] > array[j]){
                                menor = j;
                            }   
                        }
                        swap(menor, i);
                        movimentacao += 3;
                    }

                    println(movimentacao);
                    println((3*n - 3));
    
    Exercicio Resolvido 22:
        Resposta: c(n) = (n-1)*(n-1-i);
    
    Exercicio Resolvido 23:
        Resposta: Melhor caso: f(n) = n / 0(n) = n; Pior caso: f(n) = 2n / 0(n) = n;

    Exercicio(1):
        4

    Exercicio(2):      
        4
    
    Exercicio(3):
        9
    
    Exercicio(4):
        11

    Exercicio(5): 
        n^2 - 3n

    Exercicio(6):
        n^2 - 7n

    Exercicio(7):
        f(n)= n^2 - 14n + 49
        para n ate 7 = 0
    
    Exercicio(8):
        lg(n)
    
    Exercicio(9):
        lg(n+1) + 1

    Exercicio(10):
        lg(n)
    
    Exercicio(11):
        lg(n) + 1
    
    Exercicio(12):
        lg(n+4) + 1